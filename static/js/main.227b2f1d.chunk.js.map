{"version":3,"sources":["firebaseContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["FirebaseContext","React","createContext","getProfileFB","Promise","resolve","isSuccessful","setProfileFB","getAllProfilesFB","fetchBase","FirebaseProvider","children","useCallback","key","a","fetch","method","fetchRes","ok","json","profile","headers","body","JSON","stringify","message","statusText","Provider","value","socketURL","window","location","hostname","socket","io","transports","dAppClient","DAppClient","name","versionNames","tempID","uuidv4","App","useState","activeAccount","setActiveAccount","synced","setSynced","showUnsync","setShowUnsync","song","setSong","useContext","timestamp","Date","now","username","setProfile","profiles","setProfiles","usernameInput","setUsernameInput","enqueueSnackbar","useSnackbar","statusHistory","setStatusHistory","version","songInput","setSongInput","getActiveAccount","clearActiveAccount","then","sync","address","emit","console","log","requestPermissions","permissions","updateStatus","concat","sort","b","parseFloat","variant","useEffect","result","recentStatus","history","getProfiles","onProfileChange","data","find","prof","index","slice","on","off","tempProfile","getAcc","className","style","fontSize","display","alignItems","marginLeft","paddingInline","fontFamily","Select","label","onChange","e","target","href","MenuItem","marginTop","width","marginRight","overflowX","map","textAlign","type","id","border","marginInline","padding","title","src","height","frameBorder","allowfullscreen","allow","Button","size","onClick","navigator","clipboard","writeText","marginBottom","TextField","placeholder","event","split","temp","parseSong","onKeyPress","length","position","unsync","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.227b2f1d.chunk.js","sourcesContent":["// @ts-nocheck\nimport React, { useCallback } from \"react\";\n\ninterface IProfile {\n  color: string;\n  timestamp: Date;\n  key: string;\n  username: string;\n}\nexport interface IFirebaseContext {\n  getProfileFB: (key: string) => Promise<IFetchResponseBase>;\n  setProfileFB: (profile: IProfile) => Promise<IFetchResponseBase>;\n\n  getAllProfilesFB: () => Promise<IFetchResponseBase>;\n}\n\nexport const FirebaseContext = React.createContext<IFirebaseContext>({\n  getProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  setProfileFB: () => Promise.resolve({ isSuccessful: false }),\n  getAllProfilesFB: () => Promise.resolve({ isSuccessful: false }),\n});\n\nconst fetchBase =\n  process.env.NODE_ENV === \"development\"\n    ? \"\"\n    : \"https://network3-backend.herokuapp.com\";\n\nexport const FirebaseProvider: React.FC = ({ children }) => {\n  const getProfileFB = useCallback(\n    async (key: string): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile/${key}`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    },\n    []\n  );\n\n  const setProfileFB = useCallback(\n    async (profile: IProfile): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/profile`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ profile: profile }),\n      });\n\n      if (fetchRes.ok) {\n        return { isSuccessful: true };\n      }\n\n      return { isSuccessful: false, message: fetchRes.statusText };\n    },\n    []\n  );\n\n  const getAllProfilesFB =\n    useCallback(async (): Promise<IFetchResponseBase> => {\n      const fetchRes = await fetch(fetchBase + `/users/allProfiles`, {\n        method: \"GET\",\n      });\n\n      if (fetchRes.ok) {\n        return await fetchRes.json();\n      }\n    }, []);\n\n  return (\n    <FirebaseContext.Provider\n      value={{\n        getProfileFB,\n        setProfileFB,\n        getAllProfilesFB,\n      }}\n    >\n      {children}\n    </FirebaseContext.Provider>\n  );\n};\n","// @ts-nocheck\n\nimport \"./App.css\";\nimport React, { useEffect, useState, useContext } from \"react\";\n\n//ui\nimport { Button, TextField, Select, MenuItem } from \"@material-ui/core\";\n\n//logic\nimport io from \"socket.io-client\";\nimport { DAppClient } from \"@airgap/beacon-sdk\";\n//import _ from \"underscore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FirebaseContext } from \"./firebaseContext\";\nimport { useSnackbar } from \"notistack\";\n\nconst socketURL =\n  window.location.hostname === \"localhost\"\n    ? \"ws://localhost:8000\"\n    : \"wss://network3-backend.herokuapp.com\";\n\nconst socket = io(socketURL, { transports: [\"websocket\"] });\nconst dAppClient = new DAppClient({ name: \"Beacon Docs\" });\nconst versionNames = [\"0\", \"v1.0\", \"v2.0\", \"v3.0\"];\nconst tempID = uuidv4();\n\nfunction App() {\n  const [activeAccount, setActiveAccount] = useState();\n  const [synced, setSynced] = useState(\"sync\");\n  const [showUnsync, setShowUnsync] = useState(false);\n  const [song, setSong] = useState();\n  const { getProfileFB, setProfileFB, getAllProfilesFB } =\n    useContext(FirebaseContext);\n  const [profile, setProfile] = useState({\n    song: song,\n    timestamp: Date.now(),\n    key: tempID,\n    username: \"\",\n  });\n  const [profiles, setProfiles] = useState([]);\n  const [usernameInput, setUsernameInput] = React.useState(\"\");\n  const { enqueueSnackbar } = useSnackbar();\n  const [statusHistory, setStatusHistory] = useState([]);\n  const [\n    version,\n    //setVersion\n  ] = useState(3);\n  const [songInput, setSongInput] = React.useState(\"\");\n\n  function parseSong(song) {\n    console.log(song.split(\"/\"));\n    let temp = song.split(\"/\");\n    setSong({ type: temp[3], id: temp[4] });\n  }\n\n  const handleChangeUsername = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.value.length < 25) setUsernameInput(event.target.value);\n    else setUsernameInput(event.target.value.slice(0, 25));\n  };\n\n  const handleChangeSong = (event: React.ChangeEvent<HTMLInputElement>) => {\n    //validation\n    parseSong(event.target.value);\n    setSongInput(event.target.value);\n  };\n\n  useEffect(() => {\n    async function getProfiles() {\n      let result = await getAllProfilesFB();\n      setProfiles(result.recentStatus);\n      setStatusHistory(result.history);\n    }\n    getProfiles();\n  }, [getAllProfilesFB]);\n  /*\n    function isOnline(address) {\n      console.log(address)\n      console.log(onlines)\n      onlines.find(function (prof, index) {\n        if (prof.wallet === address) {\n          return true;\n        }\n        return false;\n      });\n    }\n  */\n\n  useEffect(() => {\n    const onProfileChange = (data) => {\n      setStatusHistory(\n        statusHistory\n          .concat(data)\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n\n      //recent\n      profiles.find(function (prof, index) {\n        if (prof.key === data.key) {\n          setProfiles([\n            ...profiles.slice(0, index),\n            data,\n            ...profiles.slice(index + 1),\n          ]);\n          return true;\n        }\n        return false;\n      });\n    };\n\n    /*const onOnlineChange = (data) => {\n      console.log(data)\n      setOnlines(data);\n    };\n*/\n\n    socket.on(\"profile\", onProfileChange);\n    //socket.on('online', onOnlineChange);\n    return () => {\n      socket.off(\"profile\", onProfileChange);\n      //socket.off('online', onOnlineChange);\n    };\n  }, [\n    profiles,\n    setProfiles,\n    statusHistory,\n    //setOnlines\n  ]);\n\n  useEffect(() => {\n    async function getAcc() {\n      setActiveAccount(await dAppClient.getActiveAccount());\n      if (activeAccount) {\n        setSynced(\n          activeAccount.address.slice(0, 6) +\n          \"...\" +\n          activeAccount.address.slice(32, 36)\n        );\n        setShowUnsync(true);\n        let tempProfile = await getProfileFB(activeAccount.address);\n        setProfile(tempProfile);\n        setUsernameInput(tempProfile.username);\n        socket.emit(\"join\", activeAccount.address);\n      } else {\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      }\n    }\n    getAcc();\n  }, [activeAccount, getProfileFB]);\n\n  async function unsync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    if (activeAccount) {\n      // User already has account connected, everything is ready\n      dAppClient.clearActiveAccount().then(async () => {\n        setActiveAccount(await dAppClient.getActiveAccount());\n        setSynced(\"sync\");\n        setShowUnsync(false);\n      });\n    }\n  }\n\n  async function sync() {\n    setActiveAccount(await dAppClient.getActiveAccount());\n    //Already connected\n    if (activeAccount) {\n      setSynced(activeAccount.address);\n      setShowUnsync(true);\n      socket.emit(\"join\", activeAccount.address);\n      return activeAccount;\n    }\n    // The user is not synced yet\n    else {\n      try {\n        console.log(\"Requesting permissions...\");\n        const permissions = await dAppClient.requestPermissions();\n        setActiveAccount(await dAppClient.getActiveAccount());\n        console.log(\"Got permissions:\", permissions.address);\n        setSynced(permissions.address);\n        setShowUnsync(true);\n      } catch (error) {\n        console.log(\"Got error:\", error);\n      }\n    }\n  }\n\n  function updateStatus() {\n    if (activeAccount) {\n      let timestamp = Date.now();\n      setProfile({\n        ...profile,\n        song: song,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      //add socket\n      socket.emit(\"profile\", {\n        ...profile,\n        song: song,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setProfileFB({\n        ...profile,\n        song: song,\n        key: activeAccount.address,\n        username: usernameInput,\n        timestamp: timestamp,\n      });\n      setStatusHistory(\n        statusHistory\n          .concat([\n            {\n              ...profile,\n              song: song,\n              key: activeAccount.address,\n              username: usernameInput,\n              timestamp: timestamp,\n            },\n          ])\n          .sort((a, b) => parseFloat(b.timestamp) - parseFloat(a.timestamp))\n      );\n\n      enqueueSnackbar(\"Status Updated ! \", {\n        variant: \"success\",\n      });\n      setUsernameInput(\"\");\n    } else {\n      sync();\n    }\n  }\n\n  const handleKeyPressStatus = (event) => {\n    if (event.key === \"Enter\") {\n      updateStatus();\n    }\n  };\n\n  const handleKeyPressSong = (event) => {\n    if (event.key === \"Enter\") {\n      //preview\n    }\n  };\n\n  return (\n    <div>\n      <div\n        className=\"top-left\"\n        style={{\n          fontSize: \"1.3em\",\n          display: \"flex\",\n          alignItems: \"center\",\n          marginLeft: 6,\n          paddingInline: 5\n        }}\n      >\n        <div style={{ fontFamily: \"LeagueGothic\" }}>Network </div>\n        &nbsp;\n        <Select\n          value={version}\n          label=\"version\"\n          onChange={(e) => {\n            console.log(e.target.value);\n            let target;\n            if (e.target.value === 1) {\n              target = \"https://network1.cc/\";\n            } else if (e.target.value === 2) {\n              target = \"https://adventurepizza.github.io/Network2/\";\n            }\n\n            window.location.href = target;\n            return null;\n          }}\n        >\n          <MenuItem value={1}> {versionNames[1]}</MenuItem>\n          <MenuItem value={2}> {versionNames[2]}</MenuItem>\n          <MenuItem value={3}> {versionNames[3]}</MenuItem>\n        </Select>\n        &nbsp; 📠\n      </div>\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 3, marginLeft: 13 }}>\n        <b>History</b>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          width: \"90%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n        {statusHistory &&\n          statusHistory.map((profile) => (\n            <div key={profile.timestamp} style={{ textAlign: \"center\" }}>\n              {profile.song && profile.song.type && profile.song.id && (\n                <div\n                  style={{\n                    width: 300,\n                    border: \"solid 4px \",\n                    marginInline: 4,\n                    padding: 1,\n                  }}\n                >\n                  <div\n                    style={{\n                      textAlign: \"center\",\n                      fontSize: \"1.4em\",\n                      marginInline: 6,\n                    }}\n                  >\n                    <iframe\n                      title={profile.timestamp}\n                      src={`https://open.spotify.com/embed/${profile.song.type}/${profile.song.id}?utm_source=generator`}\n                      width=\"100%\"\n                      height=\"152\"\n                      frameBorder=\"0\"\n                      allowfullscreen=\"\"\n                      allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                    ></iframe>\n                  </div>\n                  <Button\n                    title={profile.key}\n                    size={\"small\"}\n                    onClick={async () => {\n                      navigator.clipboard.writeText(profile.key);\n                      enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                        variant: \"success\",\n                      });\n                    }}\n                  >\n                    {profile.username}{\" \"}\n                  </Button>{\" \"}\n                </div>\n              )}\n            </div>\n          ))}\n      </div>\n\n      <div style={{ fontSize: \"0.9em\", marginTop: 3, marginLeft: 13 }}>\n        <b>Recent Status</b>\n      </div>\n\n      <div\n        style={{\n          display: \"flex\",\n          width: \"90%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          overflowX: \"scroll\",\n        }}\n      >\n        <div style={{ textAlign: \"center\" }}>\n          <div\n            style={{\n              width: 300,\n              border: \"solid 4px \",\n              marginInline: 4,\n              padding: 1,\n            }}\n          >\n            <div style={{ textAlign: \"center\", fontSize: \"1.4em\" }}>\n              {profile.song && profile.song.type && profile.song.id && (\n                <iframe\n                  title={profile.timestamp}\n                  src={`https://open.spotify.com/embed/${profile.song.type}/${profile.song.id}?utm_source=generator`}\n                  width=\"100%\"\n                  height=\"152\"\n                  frameBorder=\"0\"\n                  allowfullscreen=\"\"\n                  allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                ></iframe>\n              )}\n            </div>\n\n            <Button\n              title={profile.key}\n              size={\"small\"}\n              onClick={async () => {\n                navigator.clipboard.writeText(profile.key);\n                enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                  variant: \"success\",\n                });\n              }}\n            >\n              {profile.username}{\" \"}\n            </Button>\n          </div>\n        </div>\n\n        {profiles &&\n          profiles.map(\n            (profile) =>\n              (!activeAccount || profile.key !== activeAccount.address) &&\n              profile.song &&\n              profile.song.type &&\n              profile.song.id && (\n                <div\n                  key={profile.key}\n                  style={{ textAlign: \"center\", marginInline: 6 }}\n                >\n                  <div\n                    style={{\n                      width: 300,\n                      border: \"solid 4px \",\n                      marginInline: 4,\n                      padding: 1,\n                    }}\n                  >\n                    <div style={{ textAlign: \"center\", fontSize: \"1.4em\" }}>\n                      <iframe\n                        title={profile.timestamp}\n                        src={`https://open.spotify.com/embed/${profile.song.type}/${profile.song.id}?utm_source=generator`}\n                        width=\"100%\"\n                        height=\"152\"\n                        frameBorder=\"0\"\n                        allowfullscreen=\"\"\n                        allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n                      ></iframe>\n                    </div>\n                    <Button\n                      title={profile.key}\n                      size={\"small\"}\n                      onClick={async () => {\n                        navigator.clipboard.writeText(profile.key);\n                        enqueueSnackbar(\"Address copied ! \" + profile.key, {\n                          variant: \"success\",\n                        });\n                      }}\n                    >\n                      {profile.username}{\" \"}\n                    </Button>{\" \"}\n                  </div>\n                </div>\n              )\n          )}\n      </div>\n\n      <div style={{ width: \"90%\", marginLeft: \"auto\", marginRight: \"auto\" }}>\n        <b>Preview</b>\n        <div style={{ marginBottom: 10, width: \"100%\" }}>\n          {song && song.type && song.id ? (\n            <iframe\n              title=\"preview\"\n              src={`https://open.spotify.com/embed/${song.type}/${song.id}?utm_source=generator`}\n              width=\"100%\"\n              height=\"152\"\n              frameBorder=\"0\"\n              allowfullscreen=\"\"\n              allow=\"autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture\"\n            ></iframe>\n          ) : (\n            \"Enter a spotify link for preview\"\n          )}\n        </div>\n        <TextField\n          id=\"outlined-basic\"\n          size={\"small\"}\n          label=\"Spotify Link\"\n          variant=\"outlined\"\n          placeholder=\"https://open.spotify.com/\"\n          onChange={handleChangeSong}\n          value={songInput}\n          onKeyPress={handleKeyPressSong}\n        />\n\n        <br></br>\n        <br></br>\n\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n          <TextField\n            id=\"outlined-basic\"\n            size={\"small\"}\n            label=\"info\"\n            variant=\"outlined\"\n            placeholder=\"Status\"\n            onChange={handleChangeUsername}\n            value={usernameInput}\n            onKeyPress={handleKeyPressStatus}\n          />\n\n          <Button\n            size={\"small\"}\n            title={\"update status\"}\n            onClick={() => {\n              updateStatus();\n            }}\n          >\n            {\" \"}\n            {activeAccount ? (\n              <u>update status</u>\n            ) : (\n              <u>sync to join network1</u>\n            )}{\" \"}\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"bottom-left\" style={{ position: \"absolute\" }}>\n        <Button title={\"Adventure Networks\"} size={\"small\"} onClick={() => { }}>\n          {\" \"}\n          <div style={{ textAlign: \"left\" }}>\n            {\" \"}\n            Adventure <br></br>Networks{\" \"}\n          </div>{\" \"}\n        </Button>\n      </div>\n\n      <div\n        className=\"bottom-right\"\n        style={{ position: \"absolute\", display: \"flex\", alignItems: \"center\" }}\n      >\n        {showUnsync && (\n          <Button\n            size={\"small\"}\n            title={\"unsync\"}\n            onClick={() => {\n              unsync();\n            }}\n          >\n            <u>unsync</u>{\" \"}\n          </Button>\n        )}\n\n        {showUnsync && <div> | </div>}\n        <Button\n          title={\"sync\"}\n          size={\"small\"}\n          onClick={async () => {\n            await sync();\n          }}\n        >\n          <u>{synced}</u>{\" \"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import \"./index.css\";\n\nimport App from \"./App\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { FirebaseProvider } from \"./firebaseContext\";\nimport { SnackbarProvider } from \"notistack\";\n\nReactDOM.render(\n  <FirebaseProvider>\n    <SnackbarProvider maxSnack={3}>\n      <App />\n    </SnackbarProvider>\n  </FirebaseProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}